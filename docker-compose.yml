version: "3"
services:
  backend:
    build: backend
    restart: always
    networks:
      service_network:
    depends_on:
      - db
    environment:
      - MYSQL_USER=
      - MYSQL_HOST=
      - MYSQL_DATABASE=
      - MYSQL_PASSWORD=
  frontend:
    build: frontend
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      service_network:
    environment:
      API_PROXY_PASS: backend
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
  db:
    image: mysql
    restart: always
    networks:
      service_network:
    env_file:
      - .env
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      NGINX_PROXY_CONTAINER: "nginx-proxy"
    networks:
      service_network:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
networks:
  service_network:

volumes:
  nginx-certs:
  nginx-vhost:
  nginx-html:
